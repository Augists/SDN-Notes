(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{274:function(t,e,a){"use strict";a.r(e);var n=a(13),s=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"control-and-data-plane-separation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#control-and-data-plane-separation"}},[t._v("#")]),t._v(" Control and Data Plane Separation")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#control-and-data-plane-separation"}},[t._v("Control and Data Plane Separation")]),e("ul",[e("li",[e("a",{attrs:{href:"#mininet-topologies-and-mininet-python-api"}},[t._v("Mininet Topologies and Mininet Python API")]),e("ul",[e("li",[e("a",{attrs:{href:"#testing-a-simple-mininet-setup"}},[t._v("Testing a Simple Mininet Setup")])]),e("li",[e("a",{attrs:{href:"#basic-miniet-command-line"}},[t._v("Basic Miniet Command Line")])]),e("li",[e("a",{attrs:{href:"#trying-out-different-mininet-topologies"}},[t._v("Trying Out Different Mininet Topologies")])]),e("li",[e("a",{attrs:{href:"#how-mn-works-mn-executes-python"}},[t._v("How mn Works: mn executes Python")])]),e("li",[e("a",{attrs:{href:"#writing-your-own-mininet-topologies"}},[t._v("Writing Your Own Mininet Topologies")])]),e("li",[e("a",{attrs:{href:"#more-complicated-topology-generation"}},[t._v("More Complicated Topology Generation")])]),e("li",[e("a",{attrs:{href:"#thing-not-covered"}},[t._v("Thing Not Covered")])])])]),e("li",[e("a",{attrs:{href:"#mininet-instructions"}},[t._v("Mininet Instructions")]),e("ul",[e("li",[e("a",{attrs:{href:"#notations"}},[t._v("Notations")])]),e("li",[e("a",{attrs:{href:"#command-breakdown"}},[t._v("Command Breakdown")])]),e("li",[e("a",{attrs:{href:"#mininet-basic-commands"}},[t._v("Mininet Basic Commands")])]),e("li",[e("a",{attrs:{href:"#ping-test"}},[t._v("Ping Test")])]),e("li",[e("a",{attrs:{href:"#benchmark-controller-with-iperf"}},[t._v("Benchmark Controller with iperf")])]),e("li",[e("a",{attrs:{href:"#changing-link-parameters"}},[t._v("Changing Link Parameters")])]),e("li",[e("a",{attrs:{href:"#terms"}},[t._v("Terms")])])])]),e("li",[e("a",{attrs:{href:"#control-data-separation"}},[t._v("Control/Data Separation")]),e("ul",[e("li",[e("a",{attrs:{href:"#overview"}},[t._v("Overview")]),e("ul",[e("li",[e("a",{attrs:{href:"#what-is-control-data-separation"}},[t._v("What is control/data separation?")])]),e("li",[e("a",{attrs:{href:"#why-separate-the-control-and-data-planes"}},[t._v("Why Separate the Control and Data Planes?")])]),e("li",[e("a",{attrs:{href:"#opportunities-where-separation-helps"}},[t._v("Opportunities: Where Separation Helps")])]),e("li",[e("a",{attrs:{href:"#example-data-centers-yahoo"}},[t._v("Example: Data Centers (Yahoo!)")])]),e("li",[e("a",{attrs:{href:"#example-at-t-irscp-commercial-rcp-remote-procedure-call"}},[t._v("Example: AT&T IRSCP (commercial RCP (remote procedure call))")])]),e("li",[e("a",{attrs:{href:"#two-continual-challenges"}},[t._v("Two Continual Challenges")])])])]),e("li",[e("a",{attrs:{href:"#opportunities-in-various-domains"}},[t._v("Opportunities in various domains")]),e("ul",[e("li",[e("a",{attrs:{href:"#interdomain-routing-constrained-policies"}},[t._v("Interdomain Routing: Constrained Policies")])]),e("li",[e("a",{attrs:{href:"#example-maintenance-dry-out"}},[t._v("Example: Maintenance Dry-out")])]),e("li",[e("a",{attrs:{href:"#example-egress-selection"}},[t._v("Example: Egress Selection")])]),e("li",[e("a",{attrs:{href:"#example-better-bgp-security"}},[t._v("Example: Better BGP Security")])]),e("li",[e("a",{attrs:{href:"#example-data-centers-cost"}},[t._v("Example: Data Centers (Cost)")])]),e("li",[e("a",{attrs:{href:"#example-data-center-addressing"}},[t._v("Example: Data Center Addressing")])]),e("li",[e("a",{attrs:{href:"#other-opportunities"}},[t._v("Other Opportunities")])])])]),e("li",[e("a",{attrs:{href:"#challenges-in-separating-the-data-and-control-planes"}},[t._v("Challenges in Separating the Data and Control Planes")]),e("ul",[e("li",[e("a",{attrs:{href:"#scalability-rcp"}},[t._v("Scalability: RCP")]),e("ul",[e("li",[e("a",{attrs:{href:"#scalability-principles-from-rcp-design"}},[t._v("Scalability: Principles from RCP Design")])])])]),e("li",[e("a",{attrs:{href:"#scalability-onix"}},[t._v("Scalability: ONIX")])]),e("li",[e("a",{attrs:{href:"#reliability-rcp"}},[t._v("Reliability: RCP")]),e("ul",[e("li",[e("a",{attrs:{href:"#potential-consistency-problem"}},[t._v("Potential Consistency Problem")]),e("ul",[e("li",[e("a",{attrs:{href:"#single-rcp-under-partition"}},[t._v("Single RCP Under Partition")])]),e("li",[e("a",{attrs:{href:"#multiple-rcps-under-partition"}},[t._v("Multiple RCPs Under Partition")])])])])])]),e("li",[e("a",{attrs:{href:"#reliability-onix"}},[t._v("Reliability: ONIX")])])])]),e("li",[e("a",{attrs:{href:"#summary"}},[t._v("Summary")])])])]),e("li",[e("a",{attrs:{href:"#routing-control-platform"}},[t._v("Routing Control Platform")]),e("ul",[e("li",[e("a",{attrs:{href:"#problems-with-bgp"}},[t._v("Problems with BGP")])]),e("li",[e("a",{attrs:{href:"#routing-control-platform"}},[t._v("Routing Control Platform")]),e("ul",[e("li",[e("a",{attrs:{href:"#decomposed-configureation-state"}},[t._v("Decomposed Configureation State")]),e("ul",[e("li",[e("a",{attrs:{href:"#rcp-centralize-configuration"}},[t._v("RCP: Centralize COnfiguration")])])])])])]),e("li",[e("a",{attrs:{href:"#bgp-interacts-with-underlying-protocols"}},[t._v("BGP Interacts with Underlying Protocols")]),e("ul",[e("li",[e("a",{attrs:{href:"#rcp-compute-routes-w-complete-info"}},[t._v("RCP: Compute Routes w/Complete info")])]),e("li",[e("a",{attrs:{href:"#getting-from-here-to-there"}},[t._v("Getting From Here to There")]),e("ul",[e("li",[e("a",{attrs:{href:"#phase-1-control-protocol-interactions"}},[t._v("Phase 1: Control Protocol Interactions")]),e("ul",[e("li",[e("a",{attrs:{href:"#application-controlling-path-changes"}},[t._v("Application: Controlling Path Changes")])])])]),e("li",[e("a",{attrs:{href:"#phase-2-as-wide-policy"}},[t._v("Phase 2: AS-Wide Policy")]),e("ul",[e("li",[e("a",{attrs:{href:"#application-efficient-aggregation"}},[t._v("Application: Efficient Aggregation")])])])]),e("li",[e("a",{attrs:{href:"#phase-3-all-ases-have-rcps"}},[t._v("Phase 3: All ASes Have RCPs")]),e("ul",[e("li",[e("a",{attrs:{href:"#application-more-flexible-routing"}},[t._v("Application: More Flexible Routing")])])])])])])])]),e("li",[e("a",{attrs:{href:"#summary"}},[t._v("Summary")])])])]),e("li",[e("a",{attrs:{href:"#the-4d-network-architecture"}},[t._v("The 4D Network Architecture")]),e("ul",[e("li",[e("a",{attrs:{href:"#conventional-ip-routers"}},[t._v("Conventional IP Routers")])]),e("li",[e("a",{attrs:{href:"#goal-remove-conventional-control-plane"}},[t._v("Goal: Remove (Conventional) Control Plane")]),e("ul",[e("li",[e("a",{attrs:{href:"#removing-the-control-plane-from-routers"}},[t._v("Removing the Control Plane From Routers")])])])]),e("li",[e("a",{attrs:{href:"#three-goals-of-4d-architecture"}},[t._v("Three Goals of 4D Architecture")])]),e("li",[e("a",{attrs:{href:"#the-4d-planes"}},[t._v('The "4D" Planes')]),e("ul",[e("li",[e("a",{attrs:{href:"#dissemination-and-decision-planes"}},[t._v("Dissemination and Decision Planes")]),e("ul",[e("li",[e("a",{attrs:{href:"#good-abstractions-reduce-complexity"}},[t._v("Good Abstractions Reduce Complexity")])]),e("li",[e("a",{attrs:{href:"#traffic-engineering-in-4d"}},[t._v("Traffic Engineering in 4D")])]),e("li",[e("a",{attrs:{href:"#traffic-isolation-in-4d"}},[t._v("Traffic Isolation in 4D")])])])]),e("li",[e("a",{attrs:{href:"#sdn-still-have-a-control-plane-but-it-s-not-what-4d-called-a-control-plane"}},[t._v('SDN Still Have a "Control Plane", but It\'s Not What 4D Called a Control Plane')])])])]),e("li",[e("a",{attrs:{href:"#summary"}},[t._v("Summary")])])])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"mininet-topologies-and-mininet-python-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mininet-topologies-and-mininet-python-api"}},[t._v("#")]),t._v(" Mininet Topologies and Mininet Python API")]),t._v(" "),e("h3",{attrs:{id:"testing-a-simple-mininet-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#testing-a-simple-mininet-setup"}},[t._v("#")]),t._v(" Testing a Simple Mininet Setup")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Try setting up a simple topology with three hosts connected to a single switch:")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("sudo mn --test pingall --topo single,3")])]),t._v(" "),e("p",[t._v("First runs the Mininet Launcher, and then says, run a test, pingall, among the hosts in the topology. And the topology, which we specify with this topo option, is a single switch topology with three hosts connected to it.")])])])]),t._v(" "),e("li",[e("p",[t._v("This setup uses a default switch controller and switch")]),t._v(" "),e("ul",[e("li",[t._v("Mininet also allows you to use custom remote controllers (and custom switches)")])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-02 at 02.20.12.png"}}),t._v(" "),e("h3",{attrs:{id:"basic-miniet-command-line"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#basic-miniet-command-line"}},[t._v("#")]),t._v(" Basic Miniet Command Line")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("--topo")]),t._v(": defines a topology via command line upon mininet start-up")]),t._v(" "),e("li",[e("code",[t._v("--switch")]),t._v(": defines the switch to be used. By default the OVSK software switch is used")]),t._v(" "),e("li",[e("code",[t._v("--controller")]),t._v(": defines the controller to be used. If unspecified default controller is used with a default hub behavior")])]),t._v(" "),e("h3",{attrs:{id:"trying-out-different-mininet-topologies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trying-out-different-mininet-topologies"}},[t._v("#")]),t._v(" Trying Out Different Mininet Topologies")]),t._v(" "),e("ul",[e("li",[t._v("Minimal network with two hosts and one switch\n"),e("ul",[e("li",[e("code",[t._v("sudo mn --topo minimal")])])])]),t._v(" "),e("li",[t._v("Example with 4 hosts and 4 switches\n"),e("ul",[e("li",[e("code",[t._v("sudo mn --topo linear,4")])])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-02 at 02.26.04.png"}}),t._v(" "),e("ul",[e("li",[t._v("Example with 3 hosts all connected to one switch\n"),e("ul",[e("li",[e("code",[t._v("sudo mn --topo single,3")])])])]),t._v(" "),e("li",[t._v("Tree topology with defined depth and fan-out\n"),e("ul",[e("li",[e("code",[t._v("sudo mn--topo tree,depth=2,fanout=2")])])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-02 at 02.27.58.png"}}),t._v(" "),e("h3",{attrs:{id:"how-mn-works-mn-executes-python"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#how-mn-works-mn-executes-python"}},[t._v("#")]),t._v(" How mn Works: mn executes Python")]),t._v(" "),e("ul",[e("li",[t._v('"mn" is a launch script that executes Python')])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Mininet\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("topo "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" LinearTopo\n\nLinear "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" LinearTopo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("k"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nnet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("topo"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Linear"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pingAll"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-03 at 21.04.11.png"}}),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-03 at 21.07.40.png"}}),t._v(" "),e("h3",{attrs:{id:"writing-your-own-mininet-topologies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#writing-your-own-mininet-topologies"}},[t._v("#")]),t._v(" Writing Your Own Mininet Topologies")]),t._v(" "),e("ul",[e("li",[t._v("Example: Two hosts, one switch")]),t._v(" "),e("li",[e("code",[t._v("mininet.cli.CLI(net)")]),t._v(" before "),e("code",[t._v("net.stop()")]),t._v(" will escape to interactive CLI before script terminates")]),t._v(" "),e("li",[e("code",[t._v("addLink")]),t._v(" allows you to specify: Bandwidth ("),e("code",[t._v("bw")]),t._v(") in Mbps, Delay ("),e("code",[t._v("delay")]),t._v("), Maximum Queue Size ("),e("code",[t._v("max_queue_size")]),t._v("), Loss ("),e("code",[t._v("loss")]),t._v(") in percentage")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Mininet\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" createLink\n\nnet "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating nodes in the network")]),t._v("\nc0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addController"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nh0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h0'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns0 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addSwitch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s0'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nh1 "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Creating links between nodes in network (2-ways)")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addLink"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addLink"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configuration of IP address in interfaces")]),t._v("\nh0"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setIP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.1.1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nh1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setIP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'192.168.1.2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pingAll"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nnet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h3",{attrs:{id:"more-complicated-topology-generation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#more-complicated-topology-generation"}},[t._v("#")]),t._v(" More Complicated Topology Generation")]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/python")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("topo "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Topo\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("net "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Mininet\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" dumpNodeConnections\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" setLogLevel\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SingleSwitchTopo")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Topo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n  Single switch connected to n hosts\n  '''")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("opts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize topology and default options")]),t._v("\n    Topo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__init__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("opts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    switch "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addSwitch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s1'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Python's range(N) generates 0..N-1")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" h "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      host "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addHost"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h%s'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("h"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("addLink"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("host"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" switch"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("simpleTest")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n  Create and test a simple network\n  '''")]),t._v("\n  topo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SingleSwitchTopo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  net "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Mininet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("topo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dumping host connections"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  dumpNodeConnections"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hosts"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Testing network connectivity"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pingAll"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v("'''\n  # Example of running a command on a host\n  h1 = net.get('h1')\n  result = h1.cmd('ifconfig')\n  print(result)\n  '''")]),t._v("\n\n  net"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'__main__'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Tell mininet to print useful information")]),t._v("\n  setLogLevel"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'info'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  simpleTest"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-03 at 23.32.25.png"}}),t._v(" "),e("p",[e("code",[t._v("ifconfig")]),t._v(" result")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-03 at 23.35.46.png"}}),t._v(" "),e("h3",{attrs:{id:"thing-not-covered"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thing-not-covered"}},[t._v("#")]),t._v(" Thing Not Covered")]),t._v(" "),e("ul",[e("li",[t._v("Access to filesystem")]),t._v(" "),e("li",[t._v("Setting link speeds and properties")]),t._v(" "),e("li",[t._v("Using custom controllers and switches")]),t._v(" "),e("li",[t._v("Host configuration")]),t._v(" "),e("li",[t._v("Performance measurement")])]),t._v(" "),e("h2",{attrs:{id:"mininet-instructions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mininet-instructions"}},[t._v("#")]),t._v(" Mininet Instructions")]),t._v(" "),e("h3",{attrs:{id:"notations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notations"}},[t._v("#")]),t._v(" Notations")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("notation")]),t._v(" "),e("th",[t._v("explanation")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mininet>")]),t._v(" "),e("td",[t._v("mininet specific commands are typed here")])]),t._v(" "),e("tr",[e("td",[t._v("$")]),t._v(" "),e("td",[t._v("linux commands with user level privileges are typed here")])]),t._v(" "),e("tr",[e("td",[t._v("#")]),t._v(" "),e("td",[t._v("command with sudo level access are typed here")])])])]),t._v(" "),e("h3",{attrs:{id:"command-breakdown"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#command-breakdown"}},[t._v("#")]),t._v(" Command Breakdown")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("sudo mn")]),t._v(": This starts mininet. Mininet always requires sudo to run")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--topo single,3")]),t._v(": This tells mininet to start using the topology of a ‘single’ switch and 3 hosts")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--mac")]),t._v(": This tells mininet to assign each host a sequential mac address, matching its IP address")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--switch ovsk")]),t._v(": This tells mininet that the switches are to be of the type ovsk, this is the type for Openflow")])]),t._v(" "),e("li",[e("p",[e("code",[t._v("--controller remote")]),t._v(": This tells mininet that each Openflow switch is to talk to a controller, which is located at a remote location")])])]),t._v(" "),e("h3",{attrs:{id:"mininet-basic-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mininet-basic-commands"}},[t._v("#")]),t._v(" Mininet Basic Commands")]),t._v(" "),e("ul",[e("li",[t._v("To see the list of nodes available, in the Mininet console, run:")])]),t._v(" "),e("p",[e("code",[t._v("mininet> nodes")])]),t._v(" "),e("ul",[e("li",[t._v("To see a list of available commands, in the Mininet console, run:")])]),t._v(" "),e("p",[e("code",[t._v("mininet> help")])]),t._v(" "),e("ul",[e("li",[t._v("To check the IP of a virtual host, in the Mininet console, run:")])]),t._v(" "),e("p",[e("code",[t._v("mininet> h2 ifconfig")])]),t._v(" "),e("ul",[e("li",[t._v("The alternative - better for running interactive commands and watching debug output - is to spawn an xterm for one or more virtual hosts. In the Mininet console, run:")])]),t._v(" "),e("p",[e("code",[t._v("mininet> xterm h2 h3")])]),t._v(" "),e("ul",[e("li",[t._v("If Mininet is not working correctly (or has crashed and needs to be restarted), first quit Mininet if necessary (using the exit command, or control-D), and then try clearing any residual state or processes using:")])]),t._v(" "),e("p",[e("code",[t._v("$ sudo mn -c")]),t._v(" and running Mininet again")]),t._v(" "),e("ul",[e("li",[t._v("Using dpctl")])]),t._v(" "),e("p",[t._v("dpctl is a utility that comes with the OpenFlow reference distribution and enables visibility and control over a single switch’s flow table. It is especially useful for debugging, by viewing flow state and flow counters. Most OpenFlow switches can start up with a passive listening port (in your current setup this is 6634), from which you can poll the switch, without having to add debugging code to the controller.")]),t._v(" "),e("p",[t._v("Create a second SSH window if you don’t already have one, and run:")]),t._v(" "),e("p",[e("code",[t._v("$ dpctl show tcp:127.0.0.1:6634")])]),t._v(" "),e("p",[t._v("The "),e("code",[t._v("show")]),t._v(" command connects to the switch and dumps out its port state and capabilities. Here’s a more useful command:")]),t._v(" "),e("p",[e("code",[t._v("$ dpctl dump-flows tcp:127.0.0.1:6634")])]),t._v(" "),e("h3",{attrs:{id:"ping-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ping-test"}},[t._v("#")]),t._v(" Ping Test")]),t._v(" "),e("p",[e("code",[t._v("mininet> h2 ping -c3 h3")])]),t._v(" "),e("p",[t._v("Note that the name of host h3 is automatically replaced when running commands in the Mininet console with its IP address (10.0.0.3).")]),t._v(" "),e("p",[t._v("As you saw before, switch flow table is empty. Besides that, there is no controller connected to the switch and therefore the switch doesn’t know what to do with incoming traffic, leading to ping failure.")]),t._v(" "),e("p",[t._v("You’ll use dpctl to manually install the necessary flows. In your SSH terminal:")]),t._v(" "),e("p",[e("code",[t._v("$ dpctl add-flow tcp:127.0.0.1:6634 in_port=2,actions=output:3")])]),t._v(" "),e("p",[e("code",[t._v("$ dpctl add-flow tcp:127.0.0.1:6634 in_port=3,actions=output:2")])]),t._v(" "),e("p",[t._v("This will forward packets coming at port 2 to port 3 and vice-versa. Verify by checking the flow-table:")]),t._v(" "),e("p",[e("code",[t._v("$ dpctl dump-flows tcp:127.0.0.1:6634")])]),t._v(" "),e("p",[t._v("Run the ping command again. In your mininet console:")]),t._v(" "),e("p",[e("code",[t._v("mininet> h2 ping -c3 h3")])]),t._v(" "),e("p",[t._v("Do you get replies now? Check the flow-table again and look the statistics for each flow entry. Is this what you expected to see based on the ping traffic? NOTE: if you didn’t see any ping replies coming through, it might be the case that the flow-entries expired before you start your ping test. When you do a ”dpctl dump-flows” you can see an ”idle timeout” option for each entry. This means that the flow will expire after this many secs if there is no incoming traffic. Run again respecting this limit, or install a flow-entry with longer timeout.")]),t._v(" "),e("p",[e("code",[t._v("$ dpctl add-flow tcp:127.0.0.1:6634 in_port=2,idle_timeout=120,actions=output:3")])]),t._v(" "),e("h3",{attrs:{id:"benchmark-controller-with-iperf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#benchmark-controller-with-iperf"}},[t._v("#")]),t._v(" Benchmark Controller with iperf")]),t._v(" "),e("p",[t._v("iperf is a command-line tool for checking speeds between two computers. Here, you'll benchmark the reference controller. In your SSH terminal:")]),t._v(" "),e("p",[e("code",[t._v("$ controller ptcp:")])]),t._v(" "),e("p",[t._v("This will start a simple controller that acts as a learning switch without installing any flow-entries.")]),t._v(" "),e("p",[t._v("Now, in the mininet console run:")]),t._v(" "),e("p",[e("code",[t._v("mininet> iperf")])]),t._v(" "),e("p",[t._v("This Mininet command runs an iperf TCP server on one virtual host, then runs an iperf client on a second virtual host. Once connected, they blast packets between each other and report the results.")]),t._v(" "),e("p",[t._v("Now compare with the user-space switch. In the mininet console:")]),t._v(" "),e("p",[e("code",[t._v("mininet> exit")])]),t._v(" "),e("p",[t._v("Start the same Mininet with the user-space switch:")]),t._v(" "),e("p",[e("code",[t._v("$ sudo mn --topo single,3 --controller remote --switch user")])]),t._v(" "),e("blockquote",[e("p",[t._v('Note: As pointed by many on the discussion forum the "--mac" flag causes user-space switch to fail when performing iperf or ping tests. A tourble-ticket has been generated on the mininet github to resolve this issue. In the meantime, I have omitted the "--mac" flag and it should work for now.')])]),t._v(" "),e("p",[t._v("Here we have used "),e("code",[t._v("user")]),t._v(" with --switch option instead of "),e("code",[t._v("ovsk")]),t._v(". This loads mininet with user-space switch. Run one more iperf test with the reference controller:")]),t._v(" "),e("p",[e("code",[t._v("mininet> iperf")])]),t._v(" "),e("p",[t._v("See a difference? With the user-space switch, packets must cross from user-space to kernel-space and back on every hop, rather than staying in the kernel as they go through the switch. The user-space switch is easier to modify, but slower for simulation.")]),t._v(" "),e("h3",{attrs:{id:"changing-link-parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#changing-link-parameters"}},[t._v("#")]),t._v(" Changing Link Parameters")]),t._v(" "),e("p",[t._v("Mininet 2.0 allows you to set link parameters. In the SSH terminal, run mininet with following settings:")]),t._v(" "),e("p",[e("code",[t._v("$ sudo mn --topo single,3 --mac --controller remote --switch ovsk --link tc,bw=10,delay=10ms")])]),t._v(" "),e("p",[t._v("Now, in the mininet console:")]),t._v(" "),e("p",[e("code",[t._v("mininet> h1 ping -c10 h2")])]),t._v(" "),e("p",[t._v("As the delay for each link is 10 ms, the round trip time (RTT) should be about 40 ms, since the ICMP request traverses two links (one to the switch, one to the destination) and the ICMP reply traverses two links coming back.")]),t._v(" "),e("h3",{attrs:{id:"terms"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#terms"}},[t._v("#")]),t._v(" Terms")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("OpenFlow Interface: a standard open interface between the OpenFlow controller and the OpenFlow programmable devices (i.e., switches etc)")])]),t._v(" "),e("li",[e("p",[t._v("OpenFlow Controller: sits above the OpenFlow interface. The OpenFlow reference distribution includes a controller that acts as an Ethernet learning switch in combination with an OpenFlow switch. You'll run it and look at messages being sent.")])]),t._v(" "),e("li",[e("p",[t._v("OpenFlow Switch: sits below the OpenFlow interface. The OpenFlow reference distribution includes a user-space software switch. Open vSwitch is another software but kernel-based switch, while there is a number of hardware switches available from Broadcom (Stanford Indigo release), HP, NEC, and others.")])]),t._v(" "),e("li",[e("p",[t._v("dpctl: command-line utility that sends quick OpenFlow messages, useful for viewing switch port and flow stats, plus manually inserting flow entries.")])]),t._v(" "),e("li",[e("p",[t._v("Wireshark: general (non-OF-specific) graphical utility for viewing packets. The OpenFlow reference distribution includes a Wireshark dissector, which parses OpenFlow messages sent to the OpenFlow default port (6633) in a conveniently readable way.")])]),t._v(" "),e("li",[e("p",[t._v("iperf: general command-line utility for testing the speed of a single TCP connection.")])]),t._v(" "),e("li",[e("p",[t._v("Mininet: network emulation platform. Mininet creates a virtual OpenFlow network - controller, switches, hosts, and links - on a single real or virtual machine. More Mininet details can be found at the Mininet web page .")])]),t._v(" "),e("li",[e("p",[t._v("cbench: utility for testing the flow setup rate of OpenFlow controllers.")])])]),t._v(" "),e("h2",{attrs:{id:"control-data-separation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#control-data-separation"}},[t._v("#")]),t._v(" Control/Data Separation")]),t._v(" "),e("ul",[e("li",[t._v("Learning Objectives\n"),e("ul",[e("li",[t._v("Be able to explain the difference between control and data plane")]),t._v(" "),e("li",[t._v("What is the function of each?\n"),e("ul",[e("li",[t._v("Provide examples of functions performed by each")]),t._v(" "),e("li",[t._v("Describe the infrastructure the supports the control plane and the data plane")])])]),t._v(" "),e("li",[t._v("What are the challenges of separation?")])])])]),t._v(" "),e("h3",{attrs:{id:"overview"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),e("h4",{attrs:{id:"what-is-control-data-separation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#what-is-control-data-separation"}},[t._v("#")]),t._v(" What is control/data separation?")]),t._v(" "),e("ul",[e("li",[t._v("Control Plane: Logic for controlling forwarding behavior\n"),e("ul",[e("li",[t._v("Examples: routing protocols, network middlebox configuration")])])]),t._v(" "),e("li",[t._v("Data Plane: Forward traffic according to control plane logic\n"),e("ul",[e("li",[t._v("Examples: IP forwarding, Layer 2 switching")])])])]),t._v(" "),e("h4",{attrs:{id:"why-separate-the-control-and-data-planes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-separate-the-control-and-data-planes"}},[t._v("#")]),t._v(" Why Separate the Control and Data Planes?")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Independent evolution and development")]),t._v(" "),e("ul",[e("li",[t._v("The software control of the network can evolve independently of the hardware")])])]),t._v(" "),e("li",[e("strong",[t._v("Control from high-level software program")]),t._v(" "),e("ul",[e("li",[t._v("Control behavior using higher-order programs")]),t._v(" "),e("li",[t._v("Debug/check behavior more easily")])])])]),t._v(" "),e("h4",{attrs:{id:"opportunities-where-separation-helps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opportunities-where-separation-helps"}},[t._v("#")]),t._v(" Opportunities: Where Separation Helps")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Data centers")]),t._v(": VM migration, Layer 2 routing")]),t._v(" "),e("li",[e("strong",[t._v("Routing")]),t._v(": More control over decision logic")]),t._v(" "),e("li",[e("strong",[t._v("Enterprise networks")]),t._v(": Security applications")]),t._v(" "),e("li",[e("strong",[t._v("Research networks")]),t._v(": Coexistence with production")])]),t._v(" "),e("h4",{attrs:{id:"example-data-centers-yahoo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-data-centers-yahoo"}},[t._v("#")]),t._v(" Example: Data Centers (Yahoo!)")]),t._v(" "),e("ul",[e("li",[t._v("20000 servers/cluster = 400000 VMs\n"),e("ul",[e("li",[t._v("Any-to-any, 1024 distinct 不同的 inter-host links")]),t._v(" "),e("li",[t._v("Sub-second migration, guaranteed consistency")])])]),t._v(" "),e("li",[e("strong",[t._v("Problem")]),t._v(": Keeping 20k devices in sync with 400k+ entities?")]),t._v(" "),e("li",[e("strong",[t._v("Solution")]),t._v(": Program switch from a central database")])]),t._v(" "),e("h4",{attrs:{id:"example-at-t-irscp-commercial-rcp-remote-procedure-call"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-at-t-irscp-commercial-rcp-remote-procedure-call"}},[t._v("#")]),t._v(" Example: AT&T IRSCP (commercial RCP (remote procedure call))")]),t._v(" "),e("ul",[e("li",[t._v("Filtering attack traffic\n"),e("ul",[e("li",[t._v("Measurement system detects an attack")]),t._v(" "),e("li",[t._v("Identify entry point and victim of attack")]),t._v(" "),e("li",[t._v("Drop offending traffic at the entry point")])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 01.37.00.png"}}),t._v(" "),e("h4",{attrs:{id:"two-continual-challenges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#two-continual-challenges"}},[t._v("#")]),t._v(" Two Continual Challenges")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Scalability")]),t._v(": Control elements responsible for many forwarding elements (often, thousands)")]),t._v(" "),e("li",[e("strong",[t._v("Reliability/Security")]),t._v(": What happens when a controller fails or is compromised?")])]),t._v(" "),e("h3",{attrs:{id:"opportunities-in-various-domains"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#opportunities-in-various-domains"}},[t._v("#")]),t._v(" Opportunities in various domains")]),t._v(" "),e("ul",[e("li",[t._v("New routing services in the wide area\n"),e("ul",[e("li",[t._v("Maintenance")]),t._v(" "),e("li",[t._v("Egress selection")]),t._v(" "),e("li",[t._v("Security")])])]),t._v(" "),e("li",[t._v("Data centers\n"),e("ul",[e("li",[t._v("Cost")]),t._v(" "),e("li",[t._v("Management")])])])]),t._v(" "),e("h4",{attrs:{id:"interdomain-routing-constrained-policies"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interdomain-routing-constrained-policies"}},[t._v("#")]),t._v(" Interdomain Routing: Constrained Policies")]),t._v(" "),e("ul",[e("li",[t._v("Today's interdomain routing protocol, BGP, artificially constrains routes\n"),e("ul",[e("li",[t._v("Route selection is based on a fixed set of steps")]),t._v(" "),e("li",[t._v("There are limited knobs to control inbound/outbound traffic")]),t._v(" "),e("li",[t._v("Very difficult to incorporate other information (e.g., auxiliary information, time of day)")])])]),t._v(" "),e("li",[e("strong",[t._v("Instead")]),t._v(": Route controller can directly update state")])]),t._v(" "),e("h4",{attrs:{id:"example-maintenance-dry-out"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-maintenance-dry-out"}},[t._v("#")]),t._v(" Example: Maintenance Dry-out")]),t._v(" "),e("ul",[e("li",[t._v("Planned maintenance on an edge router")])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 23.28.57.png"}}),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 23.29.38.png"}}),t._v(" "),e("h4",{attrs:{id:"example-egress-selection"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-egress-selection"}},[t._v("#")]),t._v(" Example: Egress Selection")]),t._v(" "),e("ul",[e("li",[t._v("Customer-controlled egress 出口 selection\n"),e("ul",[e("li",[t._v("Multiple ways to reach the same destination")]),t._v(" "),e("li",[t._v("Giving customers control over the decision")])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 23.33.47.png"}}),t._v(" "),e("h4",{attrs:{id:"example-better-bgp-security"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-better-bgp-security"}},[t._v("#")]),t._v(" Example: Better BGP Security")]),t._v(" "),e("ul",[e("li",[t._v("Better interdomain routing security\n"),e("ul",[e("li",[t._v("Anomaly 反常的事物 detection to detect bogus 假的 routes")]),t._v(" "),e("li",[t._v('Prefer "familiar" routers over unfamiliar')])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 23.36.52.png"}}),t._v(" "),e("h4",{attrs:{id:"example-data-centers-cost"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-data-centers-cost"}},[t._v("#")]),t._v(" Example: Data Centers (Cost)")]),t._v(" "),e("ul",[e("li",[t._v("Cost")])]),t._v(" "),e("p",[t._v("200000 servers")]),t._v(" "),e("p",[t._v("Fanout (the number of the inputs that can be connected to a specified output) of 20 -> 10000 switches")]),t._v(" "),e("p",[e("code",[t._v("$5k")]),t._v(" vendor switch = "),e("code",[t._v("$50M")])]),t._v(" "),e("p",[e("code",[t._v("$1k")]),t._v(" commodity switch = "),e("code",[t._v("$10M")])]),t._v(" "),e("p",[t._v("Savings in 10 data centers = "),e("code",[t._v("$400M")])]),t._v(" "),e("ul",[e("li",[t._v("Control")])]),t._v(" "),e("p",[t._v("More flexible control")]),t._v(" "),e("p",[t._v("Tailor 定制 network for services")]),t._v(" "),e("p",[t._v("Quickly improve and innovate")]),t._v(" "),e("h4",{attrs:{id:"example-data-center-addressing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-data-center-addressing"}},[t._v("#")]),t._v(" Example: Data Center Addressing")]),t._v(" "),e("ul",[e("li",[t._v("How to address hosts in a data center?\n"),e("ul",[e("li",[e("strong",[t._v("Layer 2")]),t._v(": Less configuration/administration, but bad scaling properties")]),t._v(" "),e("li",[e("strong",[t._v("Layer 3")]),t._v(": Can use existing routing protocols, but high administration overhead")])])]),t._v(" "),e("li",[t._v("How to get the best of both worlds?\n"),e("ul",[e("li",[t._v("Separate Controller\n"),e("ul",[e("li",[t._v("Topology-dependent MAC addressing")]),t._v(" "),e("li",[t._v("IP addressing for application compatibility")])])])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-04 at 23.50.18.png"}}),t._v(" "),e("blockquote",[e("p",[t._v("So as we know, if a particular host wants to send traffic to another host IP address, it will use the address resolution protocol, or ARP, to send out a broadcast query that asks, who has a particular IP address? In other words, what is the MAC address for this particular IP address, that I would like to send to? And the trick here is that we don't want the host, the destination host, to respond. Because it still thinks it has its old MAC address. What we can do in this case, because we have separate network control, is to use something they call a fabric manager, or a separate controller to basically intercept all of these rqueries. Or all these queries that are wanting to discover MAC addresses for particular IP addresses. So in this particular switch, receives a query that says, tell me the MAC address for a particular IP address. That switch can kick that query to a central controller or a fabric manager which can then reply with the topology dependent pseudo MAC, or P MAC. And then all of the traffic can be rewritten with the appropriate source and destination topology dependent MAC addresses. So that's just one example of how a separate controller and a data center can allow a network administrator to get the best of both worlds.")])]),t._v(" "),e("h4",{attrs:{id:"other-opportunities"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#other-opportunities"}},[t._v("#")]),t._v(" Other Opportunities")]),t._v(" "),e("ul",[e("li",[t._v("Dynamic access control")]),t._v(" "),e("li",[t._v("Seamless 不间断的 mobility 流动性/migration")]),t._v(" "),e("li",[t._v("Server load balancign")]),t._v(" "),e("li",[t._v("Network virtualization")]),t._v(" "),e("li",[t._v("Using multiple wireless access points")]),t._v(" "),e("li",[t._v("Energy-efficient networking")]),t._v(" "),e("li",[t._v("Adaptive traffic monitoring")]),t._v(" "),e("li",[t._v("Denial-of-Service attack detection")])]),t._v(" "),e("h3",{attrs:{id:"challenges-in-separating-the-data-and-control-planes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#challenges-in-separating-the-data-and-control-planes"}},[t._v("#")]),t._v(" Challenges in Separating the Data and Control Planes")]),t._v(" "),e("ul",[e("li",[t._v("Challenges from control and data separation")]),t._v(" "),e("li",[t._v("Overview of challenges\n"),e("ul",[e("li",[e("strong",[t._v("Scalability")]),t._v(": Routing decisions for many routers")]),t._v(" "),e("li",[e("strong",[t._v("Reliability")]),t._v(": Correct operation under failure")]),t._v(" "),e("li",[e("strong",[t._v("Consistency")]),t._v(": Ensuring consistency across multiple control replicas")])])]),t._v(" "),e("li",[t._v("Approaches to solving these challenges in RCP (routing control platform), ONIX")])]),t._v(" "),e("h4",{attrs:{id:"scalability-rcp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scalability-rcp"}},[t._v("#")]),t._v(" Scalability: RCP")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-06 at 10.46.22.png"}}),t._v(" "),e("ul",[e("li",[t._v("Problem: Must store routers and compute routing decisions for every router")]),t._v(" "),e("li",[t._v("Potentially thousands of routers")])]),t._v(" "),e("h5",{attrs:{id:"scalability-principles-from-rcp-design"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scalability-principles-from-rcp-design"}},[t._v("#")]),t._v(" Scalability: Principles from RCP Design")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Eliminate redundancy 冗余")]),t._v(" "),e("ul",[e("li",[t._v("Store a single copy of each route")]),t._v(" "),e("li",[t._v("Avoid redundant computation")])])]),t._v(" "),e("li",[e("p",[t._v("Accelerate lookups")]),t._v(" "),e("ul",[e("li",[t._v("Maintain indexes to identify affected routers")])])]),t._v(" "),e("li",[e("p",[t._v("Only perform BGP routing")])])]),t._v(" "),e("blockquote",[e("p",[t._v("Finally, RCP tackles some scalability problems by simply punting on performing routing for all the routing protocols in the network and simply decides to focus on performing inter-domain routing alone.")])]),t._v(" "),e("h4",{attrs:{id:"scalability-onix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scalability-onix"}},[t._v("#")]),t._v(" Scalability: ONIX")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Partitioning")]),t._v(": Only keep a subset of the overall network information base (NIB) in memory\n"),e("ul",[e("li",[t._v("Various consistency protocols to maintain consistency across different partitions")]),t._v(" "),e("li",[t._v("Two different consistency models\n"),e("ul",[e("li",[t._v("Strong consistency model: ensure that different replicas are strongly consistent at the expense of some performance")]),t._v(" "),e("li",[t._v("Weaker consistency model: more efficient about passing information around more quickly")])])])])]),t._v(" "),e("li",[e("strong",[t._v("Aggregation")]),t._v(": Use of hierarchy (e.g., Onix controllers per department or building)\n"),e("ul",[e("li",[t._v("Combine statistics, topology information")])])])]),t._v(" "),e("h4",{attrs:{id:"reliability-rcp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reliability-rcp"}},[t._v("#")]),t._v(" Reliability: RCP")]),t._v(" "),e("ul",[e("li",[t._v('Replicate 复制 RCPs ("Hot Spare")\n'),e("ul",[e("li",[t._v("Run multiple identical servers in parallel")])])]),t._v(" "),e("li",[t._v("Run independent replicas\n"),e("ul",[e("li",[t._v("Each replica has its own feed of routes")]),t._v(" "),e("li",[t._v("Each replica receives the same inputs and runs the same routing algorithm")]),t._v(" "),e("li",[t._v("No need for a consistency protocol if both replicas always see the same information")])])])]),t._v(" "),e("h5",{attrs:{id:"potential-consistency-problem"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#potential-consistency-problem"}},[t._v("#")]),t._v(" Potential Consistency Problem")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 00.01.09.png"}}),t._v(" "),e("ul",[e("li",[e("p",[t._v("Route assignments must be consistent")]),t._v(" "),e("ul",[e("li",[t._v("Even in presence of failures and partitions")])])]),t._v(" "),e("li",[e("p",[t._v("Fortunately")]),t._v(" "),e("ul",[e("li",[t._v("Flooding-based IGP means each replica knows which partitions it connects to")])])])]),t._v(" "),e("h6",{attrs:{id:"single-rcp-under-partition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#single-rcp-under-partition"}},[t._v("#")]),t._v(" Single RCP Under Partition")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 00.05.10.png"}}),t._v(" "),e("ul",[e("li",[t._v("Solution: Only use state from routers partition in assigning its routes\n"),e("ul",[e("li",[t._v("Ensures next hop is reachable")])])])]),t._v(" "),e("h6",{attrs:{id:"multiple-rcps-under-partition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#multiple-rcps-under-partition"}},[t._v("#")]),t._v(" Multiple RCPs Under Partition")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 00.05.48.png"}}),t._v(" "),e("ul",[e("li",[t._v("Solution: RCPs receive same state from each partition they can reach\n"),e("ul",[e("li",[t._v("IGP provides complete visibility, connectivity")]),t._v(" "),e("li",[t._v("Only acts on partition if it has complete state")])])])]),t._v(" "),e("h4",{attrs:{id:"reliability-onix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reliability-onix"}},[t._v("#")]),t._v(" Reliability: ONIX")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Network failures")]),t._v(": application's responsibility")]),t._v(" "),e("li",[e("strong",[t._v("Reachability to ONIX")]),t._v(": reliable protocol, multipath, etc.")]),t._v(" "),e("li",[e("strong",[t._v("ONIX failure")]),t._v(": distributed coordination 协调 amongst 其中 replicas")])]),t._v(" "),e("h3",{attrs:{id:"summary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#summary"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Control and data plane separation pose three significant challenges")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Scalability")]),t._v(": Routing decisions for many routers")]),t._v(" "),e("li",[e("strong",[t._v("Reliability")]),t._v(": Correct operation under failure")]),t._v(" "),e("li",[e("strong",[t._v("Consistency")]),t._v(": Ensuring consistency across multiple control replicas")])])]),t._v(" "),e("li",[e("p",[t._v("Hierarchy, aggregation, clever state management and distribution")])])]),t._v(" "),e("h2",{attrs:{id:"routing-control-platform"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#routing-control-platform"}},[t._v("#")]),t._v(" Routing Control Platform")]),t._v(" "),e("ul",[e("li",[t._v("Problems with BGP")]),t._v(" "),e("li",[t._v("Routing Control Platform\n"),e("ul",[e("li",[t._v("Early example of control/data separation")]),t._v(" "),e("li",[t._v('Three deployment phases ("getting from here to there")')]),t._v(" "),e("li",[t._v("Applications at each stage of deployment")])])])]),t._v(" "),e("h3",{attrs:{id:"problems-with-bgp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#problems-with-bgp"}},[t._v("#")]),t._v(" Problems with BGP")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("BGP is broken")]),t._v(" "),e("ul",[e("li",[t._v("It converges 趋于一致 slowly, sometimes not at all")]),t._v(" "),e("li",[t._v("It causes routing loops")]),t._v(" "),e("li",[t._v("It's misconfigured frequently")]),t._v(" "),e("li",[t._v("Traffic engineering is hard")])])]),t._v(" "),e("li",[e("p",[t._v("Fixing BGP is hard")]),t._v(" "),e("ul",[e("li",[t._v("Incremental fixes: Makes BGP even more complicated")]),t._v(" "),e("li",[t._v("New architectures and inter-domain protocols: Deployment is almost impossible")])])]),t._v(" "),e("li",[e("p",[t._v("AS is the logical entity for inter-domain")]),t._v(" "),e("ul",[e("li",[t._v("BGP state, logic are decomposed across routers")]),t._v(" "),e("li",[t._v("No router has complete BGP state")]),t._v(" "),e("li",[t._v("Each router makes routing decision based on partial and incomplete view")])])]),t._v(" "),e("li",[e("p",[t._v("BGP interacts in odd ways with other protocols")]),t._v(" "),e("ul",[e("li",[t._v("Most notably 尤其 with the IGP (Interior Gateway Protocol) running inside an AS")])])])]),t._v(" "),e("h3",{attrs:{id:"routing-control-platform-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#routing-control-platform-2"}},[t._v("#")]),t._v(" Routing Control Platform")]),t._v(" "),e("ul",[e("li",[t._v("Represents as AS as a single logical entity\n"),e("ul",[e("li",[t._v("Complete view of AS's routes")]),t._v(" "),e("li",[t._v("Computes routes for all routers inside an AS\n"),e("ul",[e("li",[t._v("Routers no longer have to compute routes")])])])])]),t._v(" "),e("li",[t._v("Exchanges routing with RCPs in other ASes")])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 11.43.17.png"}}),t._v(" "),e("h4",{attrs:{id:"decomposed-configureation-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decomposed-configureation-state"}},[t._v("#")]),t._v(" Decomposed Configureation State")]),t._v(" "),e("blockquote",[e("p",[t._v("One of the problems with BGP is that configuration state is decomposed across the routers inside a single autonomous system. So representing a single coherent network wide policy is quite difficult.")])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 11.57.01.png"}}),t._v(" "),e("ul",[e("li",[t._v('Assign routes "From UUNet" tag at router C')]),t._v(" "),e("li",[t._v('Don\'t send route with "From UUNet" tag to Sprint at router A')])]),t._v(" "),e("h5",{attrs:{id:"rcp-centralize-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rcp-centralize-configuration"}},[t._v("#")]),t._v(" RCP: Centralize COnfiguration")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 11.59.15.png"}}),t._v(" "),e("ul",[e("li",[t._v("RCP implements policies for entire AS\n"),e("ul",[e("li",[t._v("Knows about sessions to all other ASes")]),t._v(" "),e("li",[t._v("Implements policies in terms of relationship with ASes")])])]),t._v(" "),e("li",[t._v("Benefits\n"),e("ul",[e("li",[t._v("Simpler configuration")]),t._v(" "),e("li",[t._v("Do not have to tag routes with state")])])])]),t._v(" "),e("h3",{attrs:{id:"bgp-interacts-with-underlying-protocols"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bgp-interacts-with-underlying-protocols"}},[t._v("#")]),t._v(" BGP Interacts with Underlying Protocols")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 12.01.58.png"}}),t._v(" "),e("p",[t._v("C1 learns BGP route to destination D from RR1")]),t._v(" "),e("p",[t._v("C2 learns BGP route to destination D from RR2")]),t._v(" "),e("p",[t._v("C1 sends packets to RR1 via its IGP shortest path which traverses 穿过 C2")]),t._v(" "),e("p",[t._v("C2 sends packets to RR2 via its IGP shortest path which traverses C1")]),t._v(" "),e("ul",[e("li",[t._v("Persistent forwarding loop: packets to destination D")])]),t._v(" "),e("h4",{attrs:{id:"rcp-compute-routes-w-complete-info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rcp-compute-routes-w-complete-info"}},[t._v("#")]),t._v(" RCP: Compute Routes w/Complete info")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 12.07.16.png"}}),t._v(" "),e("ul",[e("li",[t._v("RCP learns all externally learned routes")]),t._v(" "),e("li",[t._v("Computes consistent router-level paths")]),t._v(" "),e("li",[t._v("Benefits:\n"),e("ul",[e("li",[t._v("Intrinsic 真正的 loop freedom and convergence 汇聚")]),t._v(" "),e("li",[t._v("RCP does not have to stick to BGP decision process")]),t._v(" "),e("li",[t._v('Can "pin" paths for traffic engineering and other purposes')])])])]),t._v(" "),e("h4",{attrs:{id:"getting-from-here-to-there"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getting-from-here-to-there"}},[t._v("#")]),t._v(" Getting From Here to There")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 12.21.02.png"}}),t._v(" "),e("ul",[e("li",[t._v("Two issues\n"),e("ul",[e("li",[t._v("Backward compatibility")]),t._v(" "),e("li",[t._v("Deployment incentives")])])])]),t._v(" "),e("h5",{attrs:{id:"phase-1-control-protocol-interactions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#phase-1-control-protocol-interactions"}},[t._v("#")]),t._v(" Phase 1: Control Protocol Interactions")]),t._v(" "),e("p",[t._v("Before: conventional iBGP")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.43.32.png"}}),t._v(" "),e("p",[t._v('After: RCP gets "best" iBGP routes (and IGP topology)')]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.44.20.png"}}),t._v(" "),e("p",[e("strong",[t._v("Only one AS has to change")])]),t._v(" "),e("h6",{attrs:{id:"application-controlling-path-changes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-controlling-path-changes"}},[t._v("#")]),t._v(" Application: Controlling Path Changes")]),t._v(" "),e("p",[t._v('BGP routes take "nearest exit" (shortest IGP path)')]),t._v(" "),e("p",[t._v("Failures or maintenance can change IGP (path) weights")]),t._v(" "),e("p",[e("strong",[t._v('RCP can "pin" exit points as IGP weights change')])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.48.02.png"}}),t._v(" "),e("h5",{attrs:{id:"phase-2-as-wide-policy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#phase-2-as-wide-policy"}},[t._v("#")]),t._v(" Phase 2: AS-Wide Policy")]),t._v(" "),e("p",[t._v('Before: RCP gets "best" iBGP routes (and IGP topoloty)')]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.49.09.png"}}),t._v(" "),e("p",[t._v("After: RCP gets all eBGP routes from neighbors")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.49.41.png"}}),t._v(" "),e("h6",{attrs:{id:"application-efficient-aggregation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-efficient-aggregation"}},[t._v("#")]),t._v(" Application: Efficient Aggregation")]),t._v(" "),e("p",[t._v("Aggregation curbs routing table growth")]),t._v(" "),e("p",[e("strong",[t._v("Routers can't know which routers need more specific routes")])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.51.15.png"}}),t._v(" "),e("p",[e("strong",[t._v("RCP can determine which routers need more specific routes and which routers can get by with less specific routes")])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.53.28.png"}}),t._v(" "),e("h5",{attrs:{id:"phase-3-all-ases-have-rcps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#phase-3-all-ases-have-rcps"}},[t._v("#")]),t._v(" Phase 3: All ASes Have RCPs")]),t._v(" "),e("p",[t._v("Before: RCP gets all eBGP routes from neighbors")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.54.53.png"}}),t._v(" "),e("p",[t._v("After: ASes exchange routes via RCP")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 16.55.25.png"}}),t._v(" "),e("h6",{attrs:{id:"application-more-flexible-routing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#application-more-flexible-routing"}},[t._v("#")]),t._v(" Application: More Flexible Routing")]),t._v(" "),e("ul",[e("li",[t._v("Better network management\n"),e("ul",[e("li",[t._v("Diagnostics and trouble-shooting")]),t._v(" "),e("li",[t._v("Routing co-located with other information (e.g. traffic)")]),t._v(" "),e("li",[t._v("Ability to reason about as AS as a single entity")])])]),t._v(" "),e("li",[t._v("Protocol Improvements\n"),e("ul",[e("li",[t._v("Attaching prices to routes")]),t._v(" "),e("li",[t._v("Inter-AS negotiation of exit points")]),t._v(" "),e("li",[t._v("Overlay routing informed by IP-layer information")])])])]),t._v(" "),e("h3",{attrs:{id:"summary-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#summary-2"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),e("ul",[e("li",[t._v("RCP embodies two principles for inter-domain routing\n"),e("ul",[e("li",[t._v("Treat an AS as a single logical entity\n"),e("ul",[e("li",[t._v("Compute consistent routes using complete AS-wide view")])])]),t._v(" "),e("li",[t._v("Control routing protocol interactions")])])]),t._v(" "),e("li",[t._v("Benefits\n"),e("ul",[e("li",[t._v("Simpler, more expressive configuration")]),t._v(" "),e("li",[t._v("Intrinsic robustness: no loops, faster convergence")]),t._v(" "),e("li",[t._v("Enable new applications and innovations\n"),e("ul",[e("li",[t._v("Opportunity for new traffic engineering applications")])])])])])]),t._v(" "),e("h2",{attrs:{id:"the-4d-network-architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-4d-network-architecture"}},[t._v("#")]),t._v(" The 4D Network Architecture")]),t._v(" "),e("ul",[e("li",[t._v('The "4D" Network Architecture\n'),e("ul",[e("li",[t._v("Motivation")]),t._v(" "),e("li",[t._v("Defining the 4Ds")])])]),t._v(" "),e("li",[t._v("How 4D Terminology 术语 Relates to SDN Today")])]),t._v(" "),e("h3",{attrs:{id:"conventional-ip-routers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#conventional-ip-routers"}},[t._v("#")]),t._v(" Conventional IP Routers")]),t._v(" "),e("ul",[e("li",[t._v("Management plane\n"),e("ul",[e("li",[t._v("Construct network-wide view")]),t._v(" "),e("li",[t._v("Configure the routers")])])]),t._v(" "),e("li",[t._v("Control plane\n"),e("ul",[e("li",[t._v("Track topology changes")]),t._v(" "),e("li",[t._v("Compute routes and install forwarding tables")])])]),t._v(" "),e("li",[t._v("Data plane\n"),e("ul",[e("li",[t._v("Forward, filter, buffer, mark, and rate-limit packets")]),t._v(" "),e("li",[t._v("Collect traffic statistics")])])])]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-07 at 23.28.03.png"}}),t._v(" "),e("h3",{attrs:{id:"goal-remove-conventional-control-plane"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#goal-remove-conventional-control-plane"}},[t._v("#")]),t._v(" Goal: Remove (Conventional) Control Plane")]),t._v(" "),e("ul",[e("li",[t._v("Faster innovation\n"),e("ul",[e("li",[t._v("Remove dependence on vendors and the IETF")])])]),t._v(" "),e("li",[t._v("Simpler management systems\n"),e("ul",[e("li",[t._v('No need to "invert" control-plane operations')])])]),t._v(" "),e("li",[t._v("Easier interoperability between vendors\n"),e("ul",[e("li",[t._v('Compatibility necessary only in "wire" protocols')])])]),t._v(" "),e("li",[t._v("Simpler, cheaper routers\n"),e("ul",[e("li",[t._v("Little or no software on the routers")])])])]),t._v(" "),e("h4",{attrs:{id:"removing-the-control-plane-from-routers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removing-the-control-plane-from-routers"}},[t._v("#")]),t._v(" Removing the Control Plane From Routers")]),t._v(" "),e("ul",[e("li",[t._v("Control software can run elsewhere")]),t._v(" "),e("li",[t._v("State and computation is reasonable")]),t._v(" "),e("li",[t._v("System overhead can be amortized 分期偿还")]),t._v(" "),e("li",[t._v("Easier access to other information")]),t._v(" "),e("li",[t._v("Some control can move to end hosts")])]),t._v(" "),e("h3",{attrs:{id:"three-goals-of-4d-architecture"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#three-goals-of-4d-architecture"}},[t._v("#")]),t._v(" Three Goals of 4D Architecture")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Network-level objectives")]),t._v(" "),e("ul",[e("li",[t._v("Configure the network, not the routers")]),t._v(" "),e("li",[t._v("Minimize the maximum link utilization")]),t._v(" "),e("li",[t._v("Connectivity under all layer-two failures")])])]),t._v(" "),e("li",[e("p",[t._v("Network-wide views")]),t._v(" "),e("ul",[e("li",[t._v("Complete visibility to drive decision-making")]),t._v(" "),e("li",[t._v("Traffic matrix, network topology, equipment")])])]),t._v(" "),e("li",[e("p",[t._v("DIrect control")]),t._v(" "),e("ul",[e("li",[t._v("Direct, sole 底 control over data-plane configuration")]),t._v(" "),e("li",[t._v("Packet forwarding, filtering, marking, buffering...")])])])]),t._v(" "),e("h3",{attrs:{id:"the-4d-planes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-4d-planes"}},[t._v("#")]),t._v(' The "4D" Planes')]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-08 at 00.09.51.png"}}),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Decision")]),t._v(": all management and control")]),t._v(" "),e("li",[e("strong",[t._v("Dissemination")]),t._v("传播: communication to/from routers")]),t._v(" "),e("li",[e("strong",[t._v("Discovery")]),t._v(": topology and traffic monitoring")]),t._v(" "),e("li",[e("strong",[t._v("Data")]),t._v(": traffic handling")])]),t._v(" "),e("h4",{attrs:{id:"dissemination-and-decision-planes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dissemination-and-decision-planes"}},[t._v("#")]),t._v(" Dissemination and Decision Planes")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Decision Plane")]),t._v(": Functions that operate on "),e("strong",[t._v("view of entire network")]),t._v(" and network objectives\n"),e("ul",[e("li",[t._v("Path selection and traffic engineering")]),t._v(" "),e("li",[t._v("Reachability control and VPNs")])])]),t._v(" "),e("li",[e("strong",[t._v("Dissemination Plane")]),t._v(": Functions that "),e("strong",[t._v("support creation of a network-wide view")]),t._v(" "),e("ul",[e("li",[t._v("Topology discovery")]),t._v(" "),e("li",[t._v("Report measurements, status, resources")]),t._v(" "),e("li",[t._v("Install state (e.g. FIBs, ACLs) into data-plane")])])])]),t._v(" "),e("h5",{attrs:{id:"good-abstractions-reduce-complexity"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#good-abstractions-reduce-complexity"}},[t._v("#")]),t._v(" Good Abstractions Reduce Complexity")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-08 at 00.18.11.png"}}),t._v(" "),e("ul",[e("li",[t._v("Dissemination plane is a control channel between the decision plane and the data plane")]),t._v(" "),e("li",[t._v("Routing protocols become a control channel. Complex logic in decision plane")])]),t._v(" "),e("h5",{attrs:{id:"traffic-engineering-in-4d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#traffic-engineering-in-4d"}},[t._v("#")]),t._v(" Traffic Engineering in 4D")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-08 at 00.38.03.png"}}),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Dissemination Plane")]),t._v(": Consistent network-wide view")]),t._v(" "),e("li",[e("strong",[t._v("Decisioin Plane")]),t._v(": Decision Logic that directly expresses desired solution")])]),t._v(" "),e("h5",{attrs:{id:"traffic-isolation-in-4d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#traffic-isolation-in-4d"}},[t._v("#")]),t._v(" Traffic Isolation in 4D")]),t._v(" "),e("img",{attrs:{src:"https://augists-upic.oss-cn-qingdao.aliyuncs.com/uPic/Screen Shot 2022-08-08 at 00.41.25.png"}}),t._v(" "),e("ul",[e("li",[t._v("Decision Plane\n"),e("ul",[e("li",[t._v("Reachability matrix "),e("strong",[t._v("directly expresses")]),t._v(" goal")]),t._v(" "),e("li",[t._v("Path computation can "),e("strong",[t._v("jointly")]),t._v(" optimize traffic load and obey reachability constraints 限制")])])]),t._v(" "),e("li",[t._v("Packet filters installed only where needed")])]),t._v(" "),e("h4",{attrs:{id:"sdn-still-have-a-control-plane-but-it-s-not-what-4d-called-a-control-plane"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sdn-still-have-a-control-plane-but-it-s-not-what-4d-called-a-control-plane"}},[t._v("#")]),t._v(' SDN Still Have a "Control Plane", but It\'s Not What 4D Called a Control Plane')]),t._v(" "),e("ul",[e("li",[t._v('What the 4D calls the "control plane" is actually distributed routing protocols')]),t._v(" "),e("li",[t._v('What we refer to as the "control plane" today is the decision plane" in 4D')]),t._v(" "),e("li",[t._v('The "dissemination plane" lives on, but we call it a "control channel"\n'),e("ul",[e("li",[t._v("In RCP, dissemination plane is BGP")]),t._v(" "),e("li",[t._v('In OpenFlow, it\'s "secchan"')])])])]),t._v(" "),e("h3",{attrs:{id:"summary-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#summary-3"}},[t._v("#")]),t._v(" Summary")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Four layers")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Data")]),t._v(": for processing packets")]),t._v(" "),e("li",[e("strong",[t._v("Discovery")]),t._v(": for collecting topology and traffic information")]),t._v(" "),e("li",[e("strong",[t._v("Dissemination")]),t._v(": installing packet-processing rules")]),t._v(" "),e("li",[e("strong",[t._v("Decision")]),t._v(": logically centralized controllers convert objectives into packet-handling state")])])]),t._v(" "),e("li",[e("p",[t._v("4D is a generalization of RCP")]),t._v(" "),e("ul",[e("li",[t._v("Others followed up with more general implementations that didn't just focus on routing, but also achieved other network level objectives, and ultimately used other protocols besides routing protocols as the as the dissemination plane")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);